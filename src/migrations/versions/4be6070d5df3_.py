"""empty message

Revision ID: 4be6070d5df3
Revises: f0d4fe9dade3
Create Date: 2024-12-20 23:25:09.427161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4be6070d5df3'
down_revision: Union[str, None] = 'f0d4fe9dade3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("""
    alter table "TBL_NOTIFICATION"
    drop constraint check_notification_children;
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
    alter table "TBL_NOTIFICATION"
    drop constraint "TBL_NOTIFICATION_collabo_approve_id_fkey" cascade;

""")
    op.drop_column('TBL_NOTIFICATION', 'collabo_approve_id')
    op.drop_table('TBL_COLLABO_APPROVE')
    # ### end Alembic commands ###
    op.execute("""
    ALTER TABLE "TBL_NOTIFICATION" ADD CONSTRAINT check_notification_children CHECK (
        (CASE WHEN "collabo_id" IS NULL THEN 0 ELSE 1 END)
        + (CASE WHEN "collabo_request_id" IS NULL THEN 0 ELSE 1 END)
        = 1
    )
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('TBL_NOTIFICATION', sa.Column('collabo_approve_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('TBL_NOTIFICATION_collabo_approve_id_fkey', 'TBL_NOTIFICATION', 'TBL_COLLABO_APPROVE', ['collabo_approve_id'], ['approve_id'])
    op.create_table('TBL_COLLABO_APPROVE',
    sa.Column('approve_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('collabo_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collabo_id'], ['TBL_COLLABO_REQUEST.collabo_request_id'], name='TBL_COLLABO_APPROVE_collabo_id_fkey'),
    sa.PrimaryKeyConstraint('approve_id', name='TBL_COLLABO_APPROVE_pkey')
    )
    # ### end Alembic commands ###
    op.execute("""
    ALTER TABLE "TBL_NOTIFICATION" DROP CONSTRAINT check_notification_children
    """)
    op.execute("""
    ALTER TABLE "TBL_NOTIFICATION" ADD CONSTRAINT check_notification_children CHECK (
        (CASE WHEN "collabo_id" IS NULL THEN 0 ELSE 1 END)
        + (CASE WHEN "collabo_approve_id" IS NULL THEN 0 ELSE 1 END)
        + (CASE WHEN "collabo_request_id" IS NULL THEN 0 ELSE 1 END)
        = 1
    )
    """)

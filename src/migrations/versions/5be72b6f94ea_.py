"""empty message

Revision ID: 5be72b6f94ea
Revises: d4ccfe3dc8b6
Create Date: 2024-12-09 01:23:25.556948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5be72b6f94ea'
down_revision: Union[str, None] = 'd4ccfe3dc8b6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('TBL_COLLABO',
    sa.Column('collabo_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender_creator_id', sa.UUID(), nullable=False),
    sa.Column('receive_creator_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['receive_creator_id'], ['TBL_CREATOR.creator_id'], ),
    sa.ForeignKeyConstraint(['sender_creator_id'], ['TBL_CREATOR.creator_id'], ),
    sa.PrimaryKeyConstraint('collabo_id')
    )
    op.create_table('TBL_COLLABO_APPROVE',
    sa.Column('approve_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('collabo_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['collabo_id'], ['TBL_COLLABO.collabo_id'], ),
    sa.PrimaryKeyConstraint('approve_id')
    )
    op.drop_table('TBL_APPROVE_NOTIFICATION')
    op.drop_table('TBL_COLLABO_NOTIFICATION')
    op.add_column('TBL_NOTIFICATION', sa.Column('collabo_id', sa.UUID(), nullable=True))
    op.add_column('TBL_NOTIFICATION', sa.Column('collabo_approve_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'TBL_NOTIFICATION', 'TBL_COLLABO', ['collabo_id'], ['collabo_id'])
    op.create_foreign_key(None, 'TBL_NOTIFICATION', 'TBL_COLLABO_APPROVE', ['collabo_approve_id'], ['approve_id'])
    # ### end Alembic commands ###
    op.execute("""
    ALTER TABLE "TBL_NOTIFICATION" ADD CONSTRAINT check_notification_children CHECK (
        (CASE WHEN "collabo_id" IS NULL THEN 0 ELSE 1 END)
        + (CASE WHEN "collabo_approve_id" IS NULL THEN 0 ELSE 1 END)
        = 1
    )
    """)


def downgrade() -> None:
    op.execute("""
    ALTER TABLE "TBL_NOTIFICATION" DROP CONSTRAINT check_notification_children
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("TBL_NOTIFICATION_collabo_approve_id_fkey", 'TBL_NOTIFICATION', type_='foreignkey')
    op.drop_constraint("TBL_NOTIFICATION_collabo_id_fkey", 'TBL_NOTIFICATION', type_='foreignkey')
    op.drop_column('TBL_NOTIFICATION', 'collabo_approve_id')
    op.drop_column('TBL_NOTIFICATION', 'collabo_id')
    op.create_table('TBL_COLLABO_NOTIFICATION',
    sa.Column('notification_collabo_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender_creator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('receive_creator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['TBL_NOTIFICATION.notification_id'], name='TBL_COLLABO_NOTIFICATION_notification_id_fkey'),
    sa.ForeignKeyConstraint(['receive_creator_id'], ['TBL_CREATOR.creator_id'], name='TBL_COLLABO_NOTIFICATION_receive_creator_id_fkey'),
    sa.ForeignKeyConstraint(['sender_creator_id'], ['TBL_CREATOR.creator_id'], name='TBL_COLLABO_NOTIFICATION_sender_creator_id_fkey'),
    sa.PrimaryKeyConstraint('notification_collabo_id', name='TBL_COLLABO_NOTIFICATION_pkey'),
    sa.UniqueConstraint('notification_id', name='TBL_COLLABO_NOTIFICATION_notification_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('TBL_APPROVE_NOTIFICATION',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('collabo_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collabo_id'], ['TBL_COLLABO_NOTIFICATION.notification_collabo_id'], name='TBL_APPROVE_NOTIFICATION_collabo_id_fkey'),
    sa.ForeignKeyConstraint(['notification_id'], ['TBL_NOTIFICATION.notification_id'], name='TBL_APPROVE_NOTIFICATION_notification_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'notification_id', name='TBL_APPROVE_NOTIFICATION_pkey')
    )
    op.drop_table('TBL_COLLABO_APPROVE')
    op.drop_table('TBL_COLLABO')
    # ### end Alembic commands ###
